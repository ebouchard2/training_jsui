{"version":3,"sources":["./src/ui/Badge/Badge.ts","./src/ui/FieldValue/FieldValue.ts"],"names":[],"mappings":"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","file":"Badge.js","sourcesContent":["import { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { Initialization } from '../Base/Initialization';\nimport { FieldValue, IFieldValueOptions } from '../FieldValue/FieldValue';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { Assert } from '../../misc/Assert';\nimport { $$ } from '../../utils/Dom';\nimport * as _ from 'underscore';\nimport { exportGlobally } from '../../GlobalExports';\n\nexport interface IBadgeOptions extends IFieldValueOptions {\n  colors: IBadgeColors;\n}\n\n/**\n * Badge Colors\n */\nexport interface IBadgeColors extends IBadgeColor {\n  values?: { [value: string]: IBadgeColors };\n}\n\nexport interface IBadgeColor {\n  icon?: string;\n  text?: string;\n}\n\n/**\n * The Badge component outputs a field value with customizable colors and an icon preceding it.\n *\n * This component is a result template component (see [Result Templates](https://developers.coveo.com/x/aIGfAQ)). It\n * extends the {@link FieldValue} component. Therefore all FieldValue options are also available for a Badge component.\n */\nexport class Badge extends FieldValue implements IComponentBindings {\n  static ID = 'Badge';\n\n  static doExport = () => {\n    exportGlobally({\n      Badge: Badge\n    });\n  };\n\n  /**\n   * The options for the component\n   * @componentOptions\n   */\n  static options: IBadgeOptions = {\n    /**\n     * Specifies the colors for the Badge component.\n     *\n     * You must specify the colors in a JSON format similar to what follows:\n     * ```json\n     * {\n     *   \"values\":{\n     *     \"foo\":{\n     *       \"icon\":\"blue\",\n     *       \"text\":\"#222\"\n     *     },\n     *     \"bar\":{\n     *       \"icon\":\"green\",\n     *       \"text\":\"lightgreen\"\n     *     }\n     *   },\n     *   \"icon\":\"red\",\n     *   \"text\":\"#9ab52b\"\n     * }\n     * ```\n     * This format allows you to customize both the icon and text colors for each field value as well as the default\n     * values.\n     *\n     * Colors can be specified in HTML or hexadecimal format.\n     */\n    colors: ComponentOptions.buildCustomOption<IBadgeColors>((value: string) => Badge.parseColors(value), {\n      defaultValue: { values: {} }\n    }),\n    textCaption: ComponentOptions.buildLocalizedStringOption()\n  };\n\n  static parent = FieldValue;\n\n  /**\n   * Creates a new Badge component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the Badge component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The result to associate the component with.\n   */\n  constructor(element: HTMLElement, public options: IBadgeOptions, bindings?: IComponentBindings, result?: IQueryResult) {\n    super(element, ComponentOptions.initComponentOptions(element, Badge, options), bindings, result, Badge.ID);\n    if (_.isString(this.options.colors)) {\n      // to support the old string options\n      this.options.colors = Badge.parseColors(<any>this.options.colors);\n    }\n    if (this.options.colors.values == null) {\n      this.options.colors.values = {};\n    }\n  }\n\n  // The following regexes are used to match the old color format:\n\n  // This one matches a single color, e.g. either \"red\" or \"foo: blue\".\n  // Its capture groups will be the following :\n  // 0:( 1:() 2:(red)) or 0:( 1:(foo) 2:(blue))\n  private static colorRegex = /(?:\\s*((?:[^:;]|\\\\[;:])*)\\s*:\\s*)?(\\w+|#[A-Fa-f0-9]{6}|#[A-Fa-f0-9]{3})/g;\n  // This one matches all colors, separated by semicolons, e.g. \"red; foo: blue; bar: green\".\n  // It wraps 'colorRegex' in other capture groups, such as the following:\n  // 0:(red) 1:(foo: blue;) 2:(bar: green)\n  private static colorsRegex = new RegExp('^(\\\\s*' + Badge.colorRegex.source + '\\\\s*;)*(\\\\s*' + Badge.colorRegex.source + ')?\\\\s*$');\n\n  /**\n   * Parses a {@link Badge.options.colors} option string into a workable JSON format.\n   *\n   * @param colorsOption The colors option string to parse. See {@link Badge.options.colors}.\n   */\n  public static parseColors(colorsOption: string): IBadgeColors {\n    if (colorsOption) {\n      if (Badge.colorsRegex.test(colorsOption)) {\n        let badgeColors: IBadgeColors = {\n          values: {}\n        };\n        let colors: string[][] = StringUtils.match(colorsOption, Badge.colorRegex);\n        _.each(colors, (color: string[]) => {\n          let [, fieldValue, colorValue] = color;\n          if (fieldValue != null) {\n            badgeColors.values[fieldValue.replace(/\\\\(:|;)/g, '$1')] = {\n              icon: colorValue\n            };\n          } else {\n            badgeColors.icon = colorValue;\n          }\n        });\n        return badgeColors;\n      }\n      try {\n        return JSON.parse(colorsOption);\n      } catch (e) {\n        Assert.fail(`Invalid colors for badge '${colorsOption}'`);\n      }\n    }\n    return {};\n  }\n\n  /**\n   * Gets the icon and text color of a field value.\n   *\n   * @param value The field value whose colors to return.\n   * @returns {{icon: string, text: string}} An object with the `icon` and `text` keys.\n   */\n  public getColor(value: string = ''): IBadgeColor {\n    var colorKey = _.find(_.keys(this.options.colors.values), (key: string) => value.toLowerCase() == key.toLowerCase());\n    var color: IBadgeColor = colorKey ? this.options.colors.values[colorKey] : {};\n    return {\n      icon: color.icon || this.options.colors.icon,\n      text: color.text || this.options.colors.text\n    };\n  }\n\n  /**\n   * Renders one string value with the appropriate colors and icon.\n   *\n   * @param value The field value to render.\n   * @returns {HTMLElement} An HTML `<span>` tag containing the rendered value.\n   */\n  public renderOneValue(value: string): HTMLElement {\n    let valueDom = super.renderOneValue(value);\n    $$(valueDom).addClass('coveo-value');\n\n    let color = this.getColor(value);\n\n    var icon = $$('span', { className: 'coveo-badge-icon' }).el;\n    if (color.icon != null) {\n      icon.style.color = color.icon;\n    }\n\n    let label = $$('span', { className: 'coveo-badge-label' }, valueDom.innerHTML).el;\n\n    if (color.text != null) {\n      label.style.color = color.text;\n    }\n\n    $$(valueDom).empty();\n\n    valueDom.appendChild(icon);\n    valueDom.appendChild(label);\n    return valueDom;\n  }\n\n  // Override the protected method from FieldValue class to ignore a potential textCaption on a Badge.\n  protected prependTextCaptionToDom(): void {\n    return;\n  }\n}\n\nBadge.options = _.omit(Badge.options, 'textCaption');\n\nInitialization.registerAutoCreateComponent(Badge);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Badge/Badge.ts","import { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions, IFieldOption, IComponentOptionsObjectOptionArgs } from '../Base/ComponentOptions';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { Initialization } from '../Base/Initialization';\nimport { TemplateHelpers } from '../Templates/TemplateHelpers';\nimport { Assert } from '../../misc/Assert';\nimport { DateUtils, IDateToStringOptions } from '../../utils/DateUtils';\nimport { QueryStateModel } from '../../models/QueryStateModel';\nimport { analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\nimport { Utils } from '../../utils/Utils';\nimport { Facet } from '../Facet/Facet';\nimport { $$ } from '../../utils/Dom';\nimport * as _ from 'underscore';\nimport { exportGlobally } from '../../GlobalExports';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { FacetUtils } from '../Facet/FacetUtils';\n\nexport interface IFieldValueOptions {\n  field?: IFieldOption;\n  facet?: string;\n  htmlValue?: boolean;\n  helper?: string;\n  helperOptions?: { [key: string]: any };\n  splitValues?: boolean;\n  separator?: string;\n  displaySeparator?: string;\n  textCaption?: string;\n}\n\nexport interface IAnalyticsFieldValueMeta {\n  facetId: string;\n  facetValue?: string;\n  facetTitle?: string;\n}\n\nfunction showOnlyWithHelper<T>(helpers: string[], options?: T): T {\n  if (options == null) {\n    options = <any>{};\n  }\n  (<any>options).helpers = helpers;\n  return options;\n}\n\n/**\n * The FieldValue component displays the value of a field associated to its parent search result. It is normally usable\n * within a {@link FieldTable}.\n *\n * This component is a result template component (see [Result Templates](https://developers.coveo.com/x/aIGfAQ)).\n *\n * A common use of this component is to display a specific field value which also happens to be an existing\n * {@link Facet.options.field}. When the user clicks on the FieldValue component, it activates the corresponding Facet.\n */\nexport class FieldValue extends Component {\n  static ID = 'FieldValue';\n\n  static doExport = () => {\n    exportGlobally({\n      FieldValue: FieldValue\n    });\n  };\n\n  /**\n   * The options for the component\n   * @componentOptions\n   */\n  static options: IFieldValueOptions = {\n    /**\n     * Specifies the field that the FieldValue should display.\n     *\n     * Specifying a value for this parameter is required in order for the FieldValue component to work.\n     */\n    field: ComponentOptions.buildFieldOption({ defaultValue: '@field', required: true }),\n\n    /**\n     * Specifies the {@link Facet} component to toggle when the end user clicks the FieldValue.\n     *\n     * Default value is the value of {@link FieldValue.options.field}.\n     *\n     * **Note:**\n     * > If the target {@link Facet.options.id} is is not the same as its {@link Facet.options.field}), you must specify\n     * > this option manually in order to link to the correct Facet.\n     */\n    facet: ComponentOptions.buildStringOption({ postProcessing: (value, options) => value || options.field }),\n\n    /**\n     * Specifies whether the content to display is an HTML element.\n     *\n     * Default value is `false`.\n     */\n    htmlValue: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies whether to split the FieldValue at each {@link FieldValue.options.separator}.\n     *\n     * This is useful for splitting groups using a {@link Facet.options.field}.\n     *\n     * When this option is `true`, the displayed values are split by the {@link FieldValue.options.displaySeparator}.\n     *\n     * Default value is `false`.\n     */\n    splitValues: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * If {@link FieldValue.options.splitValues} is `true`, specifies the separator string which separates multi-value\n     * fields in the index.\n     *\n     * See {@link FieldValue.options.displaySeparator}.\n     *\n     * Default value is `\";\"`.\n     */\n    separator: ComponentOptions.buildStringOption({ depend: 'splitValues', defaultValue: ';' }),\n\n    /**\n     * If {@link FieldValue.options.splitValues} is `true`, specifies the string to use when displaying multi-value\n     * fields in the UI.\n     *\n     * The component will insert this string between each value it displays from a multi-value field.\n     *\n     * See also {@link FieldValue.options.separator}.\n     *\n     * Default value is `\", \"`.\n     */\n    displaySeparator: ComponentOptions.buildStringOption({ depend: 'splitValues', defaultValue: ', ' }),\n\n    /**\n     * Specifies the helper that the FieldValue should use to display its content.\n     *\n     * While several helpers exist by default (see {@link ICoreHelpers}), it is also possible for you to create your own\n     * custom helpers (see {@link TemplateHelpers}).\n     */\n    helper: ComponentOptions.buildHelperOption(),\n\n    /**\n     * Specifies the options to call on the specified helper.\n     */\n    helperOptions: ComponentOptions.buildObjectOption(<IComponentOptionsObjectOptionArgs>{\n      subOptions: {\n        text: ComponentOptions.buildStringOption(showOnlyWithHelper(['anchor'])),\n        target: ComponentOptions.buildStringOption(showOnlyWithHelper(['anchor'])),\n        class: ComponentOptions.buildStringOption(showOnlyWithHelper(['anchor'])),\n\n        decimals: ComponentOptions.buildNumberOption(showOnlyWithHelper(['currency'], { min: 0 })),\n        symbol: ComponentOptions.buildStringOption(showOnlyWithHelper(['currency'])),\n\n        useTodayYesterdayAndTomorrow: ComponentOptions.buildBooleanOption(\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: true })\n        ),\n        useWeekdayIfThisWeek: ComponentOptions.buildBooleanOption(\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: true })\n        ),\n        omitYearIfCurrentOne: ComponentOptions.buildBooleanOption(\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: true })\n        ),\n        useLongDateFormat: ComponentOptions.buildBooleanOption(\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: false })\n        ),\n        includeTimeIfToday: ComponentOptions.buildBooleanOption(\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: true })\n        ),\n        includeTimeIfThisWeek: ComponentOptions.buildBooleanOption(\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: true })\n        ),\n        alwaysIncludeTime: ComponentOptions.buildBooleanOption(\n          showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'], { defaultValue: false })\n        ),\n        predefinedFormat: ComponentOptions.buildStringOption(showOnlyWithHelper(['date', 'dateTime', 'emailDateTime', 'time'])),\n\n        companyDomain: ComponentOptions.buildStringOption(showOnlyWithHelper(['email'])),\n        me: ComponentOptions.buildStringOption(showOnlyWithHelper(['email'])),\n        lengthLimit: ComponentOptions.buildNumberOption(showOnlyWithHelper(['email'], { min: 1 })),\n        truncateName: ComponentOptions.buildBooleanOption(showOnlyWithHelper(['email'])),\n\n        alt: ComponentOptions.buildStringOption(showOnlyWithHelper(['image'])),\n        height: ComponentOptions.buildStringOption(showOnlyWithHelper(['image'])),\n        width: ComponentOptions.buildStringOption(showOnlyWithHelper(['image'])),\n\n        precision: ComponentOptions.buildNumberOption(showOnlyWithHelper(['size'], { min: 0, defaultValue: 2 })),\n        base: ComponentOptions.buildNumberOption(showOnlyWithHelper(['size'], { min: 0, defaultValue: 0 })),\n        isMilliseconds: ComponentOptions.buildBooleanOption(showOnlyWithHelper(['timeSpan'])),\n\n        length: ComponentOptions.buildNumberOption(showOnlyWithHelper(['shorten', 'shortenPath', 'shortenUri'], { defaultValue: 200 }))\n      }\n    }),\n\n    /**\n     * Specifies a caption to display before the value.\n     *\n     * Default value is `undefined`.\n     */\n    textCaption: ComponentOptions.buildLocalizedStringOption()\n  };\n\n  static simpleOptions = _.omit(FieldValue.options, 'helperOptions');\n\n  static helperOptions = <any>{\n    helperOptions: FieldValue.options.helperOptions\n  };\n\n  /**\n   * Creates a new FieldValue.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the FieldValue component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The result to associate the component with.\n   */\n  constructor(\n    public element: HTMLElement,\n    public options: IFieldValueOptions,\n    bindings?: IComponentBindings,\n    public result?: IQueryResult,\n    fieldValueClassId: string = FieldValue.ID\n  ) {\n    super(element, fieldValueClassId, bindings);\n\n    this.options = ComponentOptions.initOptions(element, FieldValue.simpleOptions, options);\n\n    if (this.options.helper != null) {\n      this.normalizeHelperAndOptions();\n    }\n\n    this.result = this.result || this.resolveResult();\n    Assert.exists(this.result);\n\n    let loadedValueFromComponent = this.getValue();\n    if (loadedValueFromComponent == null) {\n      // Completely remove the element to ease stuff such as adding separators in CSS\n      if (this.element.parentElement != null) {\n        this.element.parentElement.removeChild(this.element);\n      }\n    } else {\n      let values: string[];\n\n      if (_.isArray(loadedValueFromComponent)) {\n        values = loadedValueFromComponent;\n      } else if (this.options.splitValues) {\n        if (_.isString(loadedValueFromComponent)) {\n          values = _.map(loadedValueFromComponent.split(this.options.separator), (v: string) => {\n            return v.trim();\n          });\n        }\n      } else {\n        loadedValueFromComponent = loadedValueFromComponent.toString();\n        values = [loadedValueFromComponent];\n      }\n      this.appendValuesToDom(values);\n      if (this.options.textCaption != null) {\n        this.prependTextCaptionToDom();\n      }\n    }\n  }\n\n  /**\n   * Gets the current FieldValue from the current {@link IQueryResult}.\n   *\n   * @returns {any} The current FieldValue or `null` if value is and `Object`.\n   */\n  public getValue() {\n    let value = Utils.getFieldValue(this.result, <string>this.options.field);\n    if (!_.isArray(value) && _.isObject(value)) {\n      value = null;\n    }\n    return value;\n  }\n\n  /**\n   * Renders a value to HTML using all of the current FieldValue component options.\n   * @param value The value to render.\n   * @returns {HTMLElement} The element containing the rendered value.\n   */\n  public renderOneValue(value: string): HTMLElement {\n    const element = $$('span').el;\n    let toRender = FacetUtils.tryToGetTranslatedCaption(this.options.field as string, value);\n\n    if (this.options.helper) {\n      // Try to resolve and execute version 2 of each helper function if available\n      const helper = TemplateHelpers.getHelper(`${this.options.helper}v2`) || TemplateHelpers.getHelper(`${this.options.helper}`);\n\n      if (Utils.exists(helper)) {\n        toRender = helper.call(this, value, this.getHelperOptions());\n      } else {\n        this.logger.warn(\n          `Helper ${this.options.helper} is not found in available helpers. The list of supported helpers is :`,\n          _.keys(TemplateHelpers.getHelpers())\n        );\n      }\n\n      const fullDateStr = this.getFullDate(value, this.options.helper);\n      if (fullDateStr) {\n        element.setAttribute('title', fullDateStr);\n      }\n      if (this.options.helper == 'date' || this.options.helper == 'dateTime' || this.options.helper == 'emailDateTime') {\n        toRender = StringUtils.capitalizeFirstLetter(toRender);\n      }\n    }\n\n    if (this.options.htmlValue) {\n      element.innerHTML = toRender;\n    } else {\n      element.appendChild(document.createTextNode(toRender));\n    }\n    this.bindEventOnValue(element, value);\n    return element;\n  }\n\n  protected getValueContainer() {\n    return this.element;\n  }\n\n  private normalizeHelperAndOptions() {\n    this.options = ComponentOptions.initOptions(this.element, FieldValue.helperOptions, this.options);\n    const toFilter = _.keys(FieldValue.options.helperOptions['subOptions']);\n    const toKeep = _.filter(toFilter, optionKey => {\n      const optionDefinition = FieldValue.options.helperOptions['subOptions'][optionKey];\n      if (optionDefinition) {\n        const helpers = optionDefinition.helpers;\n        return helpers != null && _.contains(helpers, this.options.helper);\n      }\n      return false;\n    });\n    this.options.helperOptions = _.omit(this.options.helperOptions, (value, key) => {\n      return !_.contains(toKeep, key);\n    });\n  }\n\n  private getHelperOptions() {\n    const inlineOptions = ComponentOptions.loadStringOption(this.element, 'helperOptions', {});\n    if (Utils.isNonEmptyString(inlineOptions)) {\n      return _.extend({}, this.options.helperOptions, eval('(' + inlineOptions + ')'));\n    }\n    return this.options.helperOptions;\n  }\n\n  private getFullDate(date: string, helper: string) {\n    const fullDateOptions: IDateToStringOptions = {\n      useLongDateFormat: true,\n      useTodayYesterdayAndTomorrow: false,\n      useWeekdayIfThisWeek: false,\n      omitYearIfCurrentOne: false\n    };\n\n    if (helper == 'date') {\n      return DateUtils.dateToString(new Date(parseInt(date)), fullDateOptions);\n    } else if (helper == 'dateTime' || helper == 'emailDateTime') {\n      return DateUtils.dateTimeToString(new Date(parseInt(date)), fullDateOptions);\n    }\n    return '';\n  }\n\n  private appendValuesToDom(values: string[]): void {\n    _.each(values, (value, index) => {\n      if (value != undefined) {\n        this.getValueContainer().appendChild(this.renderOneValue(value));\n        if (index !== values.length - 1) {\n          this.getValueContainer().appendChild(document.createTextNode(this.options.displaySeparator));\n        }\n      }\n    });\n  }\n\n  private renderTextCaption(): HTMLElement {\n    const element = $$('span', { className: 'coveo-field-caption' }, _.escape(this.options.textCaption));\n    return element.el;\n  }\n\n  protected prependTextCaptionToDom(): void {\n    const elem = this.getValueContainer();\n    $$(elem).prepend(this.renderTextCaption());\n    // Add a class to the container so the value and the caption wrap together.\n    $$(elem).addClass('coveo-with-label');\n  }\n\n  private bindEventOnValue(element: HTMLElement, value: string) {\n    const facetAttributeName = QueryStateModel.getFacetId(this.options.facet);\n    const facets: Component[] = _.filter(this.componentStateModel.get(facetAttributeName), (possibleFacetComponent: Component) => {\n      // Here, we need to check if a potential facet component (as returned by the component state model) is a \"standard\" facet.\n      // It's also possible that the FacetRange and FacetSlider constructor are not available (lazy loading mode)\n      // For that reason we also need to check that the constructor event exist before calling the instanceof operator or an exception would explode (cannot use instanceof \"undefined\")\n      let componentIsAStandardFacet = true;\n      const facetRangeConstructorExists = Component.getComponentRef('FacetRange');\n      const facetSliderConstructorExists = Component.getComponentRef('FacetSlider');\n\n      if (possibleFacetComponent.disabled) {\n        return false;\n      }\n\n      if (componentIsAStandardFacet && facetRangeConstructorExists) {\n        componentIsAStandardFacet = !(possibleFacetComponent instanceof facetRangeConstructorExists);\n      }\n\n      if (componentIsAStandardFacet && facetSliderConstructorExists) {\n        componentIsAStandardFacet = !(possibleFacetComponent instanceof facetSliderConstructorExists);\n      }\n\n      return componentIsAStandardFacet;\n    });\n\n    const atLeastOneFacetIsEnabled = facets.length > 0;\n\n    if (atLeastOneFacetIsEnabled) {\n      const selected = _.find(facets, (facet: Facet) => {\n        const facetValue = facet.values.get(value);\n        return facetValue && facetValue.selected;\n      });\n      $$(element).on('click', () => {\n        if (selected != null) {\n          _.each(facets, (facet: Facet) => facet.deselectValue(value));\n        } else {\n          _.each(facets, (facet: Facet) => facet.selectValue(value));\n        }\n        this.queryController.deferExecuteQuery({\n          beforeExecuteQuery: () =>\n            this.usageAnalytics.logSearchEvent<IAnalyticsFieldValueMeta>(analyticsActionCauseList.documentField, {\n              facetId: this.options.facet,\n              facetValue: value.toLowerCase()\n            })\n        });\n      });\n\n      if (selected) {\n        $$(element).addClass('coveo-selected');\n      }\n      $$(element).addClass('coveo-clickable');\n    }\n  }\n}\n\nInitialization.registerAutoCreateComponent(FieldValue);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/FieldValue/FieldValue.ts"],"sourceRoot":""}